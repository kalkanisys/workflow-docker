version: "3"

includes:
  vars:
    taskfile: >-
      {{ if .DEPLOY_FILE }}{{ .DEPLOY_FILE }}{{ else if .ENV }}deploy.{{.ENV}}.yml{{ else }}deploy.yml{{ end }}
    optional: true

dotenv:
  # bottom to top priority
  - ".env.{{.ENV}}"
  - "{{.ENV}}.env"
  # - ".env.local"
  # - ".env"
  - "default.env"

vars:
  # This value is override by value included from deploy.*.yml
  REMOTE_HOST: username@server-ip
  PROJECT: app
  INIT_ENVS: .env,.env.{{.PROJECT}}

  DOCKER_REGISTRY: ""
  DOCKER_COMPOSE_FILE: docker-compose.deploy.yml
  DOCKER_BUILD_ARGS: ""
  DOCKER_PUSH_ARGS: ""
  DOCKER_LOAD_ARGS: ""
  DOCKER_REGISTRY_PORT: "5000"
  DOCKER_FILE: Dockerfile

  GIT_HASH:
    sh: git describe --tags --always || echo ${VERSION:-latest}
  IMAGE_NAME:
    sh: echo ${IMAGE_NAME:-{{ if .DOCKER_REGISTRY }}{{ print .DOCKER_REGISTRY "/" }}{{ end }}{{ .PROJECT }}}
  IMAGE_TAG:
    sh: echo ${IMAGE_TAG:-{{.GIT_HASH}}}

  STACK: >-
    {{ if .STACK }}{{ .STACK }}{{ else if .ENV }}{{ .ENV }}-{{ .PROJECT }}{{ else }}{{ .PROJECT }}{{ end }}
  STACK_DIR: >-
    {{ if .STACK_DIR }}{{ .STACK_DIR }}{{ else }}{{ print "~/.docker-compose/" .STACK }}{{ end }}
  CONFIG_DIR: >-
    {{ if .CONFIG_DIR }}{{ .CONFIG_DIR }}{{ else }}{{ print "deploy/" .STACK }}{{ end }}

  # Helpers
  SSH_CLI: ssh
  RUN: >-
    {{.SSH_CLI}} -T {{.REMOTE_HOST}}

env:
  STACK: "{{.STACK}}"
  STACK_DIR: "{{.STACK_DIR}}"
  GIT_HASH: "{{.GIT_HASH}}"
  IMAGE_NAME: "{{.IMAGE_NAME}}"
  IMAGE_TAG: "{{.IMAGE_TAG}}"
  PROJECT: "{{.PROJECT}}"
  CONFIG_DIR: "{{.CONFIG_DIR}}"
  DOCKER_FILE: "{{.DOCKER_FILE}}"

tasks:
  print:vars:
    cmds:
      - echo "STACK={{.STACK}}"
      - echo "STACK_DIR={{.STACK_DIR}}"
      - echo "GIT_HASH={{.GIT_HASH}}"
      - echo "IMAGE_NAME={{.IMAGE_NAME}}"
      - echo "IMAGE_TAG={{.IMAGE_TAG}}"
      - echo "PROJECT={{.PROJECT}}"
      - echo "CONFIG_DIR={{.CONFIG_DIR}}"
      - echo "DOCKER_FILE={{.DOCKER_FILE}}"

  deploy:init:
    run: once
    cmds:
      - >-
        {{.RUN}} "
        mkdir -p {{.STACK_DIR}} &&
        touch {{.STACK_DIR}}/{{ print "{" .INIT_ENVS "}" }} &&
        chmod 750 {{.STACK_DIR}}
        "

  docker:build:
    cmds:
      - >-
        {{ if .DOCKER_BUILD_CMD }}{{.DOCKER_BUILD_CMD}}{{ else }}
        docker build
        --label org.opencontainers.image.created="{{ dateInZone "2006-01-02T15:04:05Z" (now) "UTC" }}"
        --label org.opencontainers.image.revision="{{.GIT_HASH}}"
        -t {{.IMAGE_NAME}}:{{.IMAGE_TAG}}
        -f {{.DOCKER_FILE}}
        {{ .DOCKER_BUILD_ARGS | default "." }}
        {{ end }}

  docker:push:
    cmds:
      - defer: |
          [[ ! -z "$DOCKER_REGISTRY_PORT" ]] && {{.SSH}} -T -o "ControlPath ~/.ssh/docker-{{.STACK}}-{{.DOCKER_REGISTRY_PORT}}" -O "exit" {{.REMOTE_HOST}}
        ignore_error: true
      - | # https://gist.github.com/scy/6781836
        {{ if .DOCKER_PUSH_CMD }}{{.DOCKER_PUSH_CMD}}{{ else }}
        {{ if eq .DOCKER_REGISTRY "localhost:{{.DOCKER_REGISTRY_PORT}}" }}
        export DOCKER_REGISTRY_PORT={{.DOCKER_REGISTRY_PORT}}
        {{.SSH}} -f -o ExitOnForwardFailure=yes -o ControlMaster=auto -o "ControlPath ~/.ssh/docker-{{.STACK}}-{{.DOCKER_REGISTRY_PORT}}" -N -T -M -L {{.DOCKER_REGISTRY_PORT}}:localhost:{{.DOCKER_REGISTRY_PORT}} {{.REMOTE_HOST}}
        docker push {{ .DOCKER_PUSH_ARGS }} {{.IMAGE_NAME}}:{{.IMAGE_TAG}}
        {{ else if .DOCKER_REGISTRY }}
        docker push {{ .DOCKER_PUSH_ARGS }} {{.IMAGE_NAME}}:{{.IMAGE_TAG}}
        {{ else }}
        docker save {{ .DOCKER_PUSH_ARGS }}{{.IMAGE_NAME}}:{{.IMAGE_TAG}} | bzip2 | {{.RUN}} 'docker load {{ .DOCKER_LOAD_ARGS }}'
        {{ end }}
        {{ end }}

  deploy:config:
    cmds:
      - |
        envsubst '${IMAGE_NAME},${IMAGE_TAG},${GIT_HASH},${STACK},${PROJECT}{{ .DEPLOY_ENV_LIST }}' < {{.DOCKER_COMPOSE_FILE}} | {{.RUN}} "cat >{{.STACK_DIR}}/docker-compose.yml"

        {{ if .DEPLOY_CONFIG_CMD }}{{.DEPLOY_CONFIG_CMD}}{{else if .CONFIG_DIR}}
        [[ -d {{.CONFIG_DIR}} ]] && rsync -e "{{.SSH}}" -avP --delete {{.CONFIG_DIR}}/ {{.REMOTE_HOST}}{{.STACK_DIR}}/"
        {{ end }}

  deploy:run:
    cmds:
      - |
        {{.DEPLOY_PRE_RUN_CMD}}
        {{ if .DEPLOY_RUN_CMD }}{{.DEPLOY_RUN_CMD}}{{ else }}
        {{.RUN}} "cd {{.STACK_DIR}} && docker compose {{ .DEPLOY_RUN_ARGS | default "up -d" }}"
        {{ end }}
        {{.DEPLOY_POST_RUN_CMD}}

  deploy:
    cmds:
      - task: deploy:init
      - task: docker:build
      - task: docker:push
      - task: deploy:config
      - task: deploy:run
